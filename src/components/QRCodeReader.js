/*
import React, { useState } from 'react';
import axios from 'axios';

const QRCodeReader = () => {
  const [decodedMessage, setDecodedMessage] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState(null);

  const handleFileChange = async (e) => {
    try {
      setIsLoading(true);
      setError(null);

      const file = e.target.files[0];
      const formData = new FormData();
      formData.append('file', file);

      const response = await axios.put('http://localhost:9090/read', formData, {
        headers: {
          'Content-Type': 'multipart/form-data'
        }
      });

      setDecodedMessage(response.data);
    } catch (error) {
      setError('Error reading QR code. Please try again.');
      console.error('Error reading QR code:', error);
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div style={containerStyle}>
     

      <input type="file" onChange={handleFileChange} style={fileInputStyle} />
      {isLoading && <p style={loadingStyle}>Decoding QR code...</p>}
      {error && <p style={errorStyle}>{error}</p>}
      {decodedMessage && (
        <div style={decodedMessageContainerStyle}>
          <p style={decodedFieldStyle}>Title: {decodedMessage.title}</p>
          <p style={decodedFieldStyle}>Message: {decodedMessage.message}</p>
          <p style={decodedFieldStyle}>Generated By: {decodedMessage.generatedByName}</p>
          <p style={decodedFieldStyle}>Generated For: {decodedMessage.generatedForName}</p>
          */
          
      /*
        </div>
      )}
    </div>
  );
};

const containerStyle = {
  margin: '20px',
};

const pictureStyle = {
  width: '100%', // Adjust the width as needed
  borderRadius: '5px', // Optional: add border-radius to the picture
  marginBottom: '10px', // Optional: add margin to separate the picture from the file input
};

const fileInputStyle = {
  marginBottom: '15px',
};

const loadingStyle = {
  marginTop: '10px',
  color: '#4CAF50', // Green color
};

const errorStyle = {
  marginTop: '10px',
  color: '#FF0000', // Red color
};

const decodedMessageContainerStyle = {
  marginTop: '20px',
  padding: '15px',
  border: '1px solid #ccc',
  borderRadius: '5px',
  backgroundColor: '#f8f8f8',
};

const decodedFieldStyle = {
  margin: '5px 0',
  fontWeight: 'bold',
};

export default QRCodeReader;
*/
import React, { useState } from 'react';
import axios from 'axios';

const QRCodeReader = () => {
  const [decodedMessage, setDecodedMessage] = useState('');

  const handleFileChange = async (e) => {
    const file = e.target.files[0];
    const formData = new FormData();
    formData.append('file', file);

    try {
      const response = await axios.put('http://localhost:9090/read', formData, {
        headers: {
          'Content-Type': 'multipart/form-data'
        }
      });
      // Assuming the backend returns the decoded message
      setDecodedMessage(response.data); // Set the decoded message
    } catch (error) {
      console.error('Error reading QR code:', error);
    }
  };

  return (
    <div style={containerStyle}>
      <h2 style={headerStyle}>QR Code Reader</h2>
      <input type="file" onChange={handleFileChange} style={fileInputStyle} />
      {/* Display decoded message */}
      {decodedMessage && (
        <div style={decodedMessageContainerStyle}>
          <p style={decodedFieldStyle}>Title: {decodedMessage.title}</p>
          <p style={decodedFieldStyle}>Message: {decodedMessage.message}</p>
          <p style={decodedFieldStyle}>Generated By: {decodedMessage.generatedByName}</p>
          <p style={decodedFieldStyle}>Generated For: {decodedMessage.generatedForName}</p>
          {/* Add other decoded fields here */}
        </div>
      )}
    </div>
  );
};

// Styles for better presentation
const containerStyle = {
  maxWidth: '400px',
  margin: 'auto',
  padding: '20px',
  border: '1px solid #ccc',
  borderRadius: '8px',
  backgroundColor: '#f8f8f8',
};

const headerStyle = {
  fontSize: '24px',
  color: '#333',
  textAlign: 'center',
  marginBottom: '20px',
};

const fileInputStyle = {
  display: 'block',
  width: '100%',
  marginBottom: '15px',
};

const decodedMessageContainerStyle = {
  marginTop: '20px',
  padding: '15px',
  border: '1px solid #ccc',
  borderRadius: '20px',
  backgroundColor: '#f4f4f4',
};

const decodedFieldStyle = {
  margin: '5px 0',
  fontWeight: 'bold',
};

export default QRCodeReader;
